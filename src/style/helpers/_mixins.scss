@use 'sass:math';
@use 'functions' as *;

@mixin fluid-text($max: 48, $min: 16) {
  font-size: fluid($max, $min);
}

@mixin hide {
    opacity: 0;
    visibility: hidden;
}

@mixin show {
    opacity: 1;
    visibility: visible;
}

@mixin flex-center($isInline: false) {
  @if $isInline {
    display: inline-flex;
  } @else  {
    display: flex;
  }

  justify-content: center;
  align-items: center;
}

@mixin abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@mixin border-gradient($side: all) {
  @if $side == all {
    border: rem(1) solid transparent;
    border-image: var(--color-accent);
    border-image-slice: 1;
  } @else if $side == top {
    border-top: rem(1) solid transparent;
    border-image: var(--color-accent);
    border-image-slice: 1;
  } @else if $side == bottom {
    border-bottom: rem(1) solid transparent;
    border-image: var(--color-accent);
    border-image-slice: 1;
  } @else if $side == left {
    border-left: rem(1) solid transparent;
    border-image: var(--color-accent);
    border-image-slice: 1;
  } @else if $side == right {
    border-right: rem(1) solid transparent;
    border-image: var(--color-accent);
    border-image-slice: 1;
  }
}

@mixin border-light {
  border: rem(1) solid;
  border-image: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.3) 30%,
      rgba(255, 255, 255, 0.1) 70%,
  ) 1;
}

@mixin bg-gradient($width, $height) {
  position: relative; 

  &::after {
    @include abs-center;

    content: '';
    width: rem($width);
    height: rem($height);
    background: var(--color-accent);
    filter: blur(rem(90));
    z-index: -8;
  }
}

@mixin bg-blue-image {
  position: relative;

  &::before {
    content: '';
    display: block;
    position: absolute;
    width: fluid(400, 300);
    height: fluid(500, 371);
    background-color: var(--color-dark-blue);
    z-index: -9;
  }
}

@mixin text-arrow {
  &::after {
    @include flex-center;
    @include square(rem(24));

    content: '>';
    transform: rotate(90deg);
    transition-duration: var(--transition-duration);
    font-size: rem(12);
    cursor: pointer;
  }

  &:has(.is-active)::after {
    transform: rotate(-90deg);
  }
}